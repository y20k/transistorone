apply plugin: 'com.android.application'

android {

    compileSdkVersion 29

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    defaultConfig {
        applicationId 'org.y20k.transistorone'
        minSdkVersion 19
        targetSdkVersion 29
        versionCode 71
        versionName '3.2.4'

        vectorDrawables.useSupportLibrary = true
        resConfigs "en", "ar", "ca", "cs","de", "el", "es", "eu", "fr", "id", "in", "it", "ja", "kab", "nb-rNO", "nl", "pa", "pl", "pt", "pt-rBR", "ru", "sk", "sl", "sr", "th", "tr", "uk", "zh-rCN"
    }

    buildTypes {

        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

    }

    lintOptions {
        disable 'MissingTranslation'
    }
}


dependencies {

    implementation fileTree(include: ['*.jar'], dir: 'libs')

    implementation "androidx.appcompat:appcompat:1.1.0"
    implementation "androidx.palette:palette:1.0.0"
    implementation "androidx.constraintlayout:constraintlayout:1.1.3"
    implementation 'androidx.swiperefreshlayout:swiperefreshlayout:1.0.0'
    implementation "androidx.media:media:1.1.0"
    implementation "androidx.lifecycle:lifecycle-runtime:2.2.0"
    implementation "androidx.lifecycle:lifecycle-extensions:2.2.0"

    implementation "com.google.android.material:material:1.1.0-beta01"

    implementation "com.google.android.exoplayer:exoplayer-core:2.10.8"
    implementation "com.google.android.exoplayer:exoplayer-hls:2.10.8"

}


// Support legacy language codes
// https://developer.android.com/reference/java/util/Locale#legacy-language-codes
// Credit: https://github.com/TeamAmaze/AmazeFileManager/blob/541c98fc77a9415bcd4a1279b85c6c2d38f669c1/app/build.gradle#L212

task supportLegacyLanguageCodes

[['id', 'in'], ['yi', 'ji'], ['he', 'iw']].forEach { sourceCode, destinationCode ->
    def copyTask = tasks.create('copyStrings' + sourceCode + 'Into' + destinationCode, Copy) {
        description('copying values-' + sourceCode + ' strings into values-' + destinationCode)
        from('src/main/res/values-' + sourceCode)
        into('src/main/res/values-' + destinationCode)
        include('strings.xml')
    }
    supportLegacyLanguageCodes.dependsOn copyTask
}

project.afterEvaluate {
    preBuild.dependsOn supportLegacyLanguageCodes
}

clean.dependsOn supportLegacyLanguageCodes
clean.mustRunAfter supportLegacyLanguageCodes